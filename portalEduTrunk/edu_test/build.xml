<?xml version = "1.0" encoding="UTF-8" standalone="no"?>
<project name="portalTest" basedir="." default="jboss-deploy">
	
	<property file="build.properties"/>
	<property file="build.properties.default"/>
	<property environment="env"/>
	
	<!--
	<path id="anttools.tomcat">
	<pathelement path="${anttools.dir}/catalina-ant.jar"/>
	</path>
	
	<taskdef name="deploy" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="list" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.ListTask"/>
	<taskdef name="reload" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="undeploy" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.UndeployTask"/>
	<taskdef name="start" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.StartTask"/>
	<taskdef name="stop" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.StopTask"/>
	-->
	<!--
	<taskdef name="deploy"   classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="list"     classname="org.apache.catalina.ant.ListTask"/>
	<taskdef name="reload"   classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/>
	-->
	
	<!--
	<taskdef name="deploy" classpathref="anttools.tomcat"
	classname="org.apache.catalina.ant.DeployTask"/>
	-->
	<path id="compile.classpath">
		<fileset dir="${war.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${compile-lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<path id="run.classpath">
		<fileset dir="${war.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${compile-lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement location="${war.classes.dir}"/>
		<pathelement location="${jar.test.classes.dir}"/>
	</path>
	
	<target name="all" depends="clean,war" description="Rebuild war"/>
	
	<target name="clean" description="Deletes compiled and generated code">
		<delete dir="${target.dir}"/>
		<delete>
			<fileset dir="${war.classes.dir}" includes="**/*.class"/>
		</delete>
	</target>
	
	<target name="precompile" description="Prepare target dir and copy resources">
		<mkdir dir="${jar.classes.dir}"/>
		<mkdir dir="${jar.test.classes.dir}"/>
		
		<copy todir="${jar.classes.dir}">
			<fileset dir="${resources.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
				<include name="**/*.n3"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile" description="Compiles the Java code"
		depends="precompile">
		<ant antfile="${portal.core.dir}/build.xml" dir="${portal.core.dir}"
			target="jar"/>
		<copy file="${portal.core.dir}/target/portalCore.jar"
			todir="${war.lib.dir}"/>
		
		<javac srcdir="${src.dir}" destdir="${jar.classes.dir}"
			excludes="**/Test*.java" debug="on" deprecation="on">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>
	
	<target name="compile-test" description="Compiles the Java code"
		depends="precompile">
		<javac srcdir="${src.dir}" destdir="${jar.test.classes.dir}"
			includes="**/Test*.java" debug="on" deprecation="on">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>
	
	<target name="junit" depends="compile,compile-test"
		description="Run JUnit Tests">
		<junit printsummary="on" fork="true" haltonfailure="false"
			failureproperty="tests.failed" showoutput="true">
			<classpath refid="run.classpath"/>
			<formatter type="xml" usefile="true"/>
			
			<batchtest>
				<fileset dir="${jar.test.classes.dir}">
					<include name="**/Test*.*"/>
				</fileset>
			</batchtest>
		</junit>
		
		<mkdir dir="${reports.dir}"/>
		
		<junitreport todir="${reports.dir}">
			<fileset dir=".">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${reports.dir}/html"/>
		</junitreport>
		
		<delete failonerror="false">
			<fileset dir="." includes="TEST-*.xml"/>
		</delete>
		
		<fail if="tests.failed">tests.failed=${tests.failed}
			***********************************************************
			*********************************************************** **** One or
			more tests failed! Check the output ... ****
			***********************************************************
			***********************************************************</fail>
	</target>
	
	<target name="createDTD">
		<antstructure output="project.dtd"/>
	</target>
	
	<target name="war" depends="compile"
		description="Packages the Web files into a WAR file">
		
		<antcall target="validate"/>
		<antcall target="validate-message"/>
		
		<mkdir dir="${target.dir}"/>
		<copy todir="${war.classes.dir}">
			<fileset dir="${jar.classes.dir}"/>
		</copy>

		<unzip src="${test.resources.dir}/selenium-core-0.8.2.zip"
			dest="${web.dir}">
		</unzip>
		<move todir="${web.dir}/selenium-core">
			<fileset dir="${web.dir}/selenium-core-0.8.2"/>
		</move>
		
		
		
		<war destFile="${target.dir}/${ant.project.name}.war"
			webxml="${web.dir}/WEB-INF/web.xml">
			
			<fileset dir="${web.dir}" excludes="WEB-INF/web.xml"/>
		</war>
		
		<delete dir="${web.dir}/selenium-core"/>

	</target>
	
	<target name="jboss-deploy" depends="war"
		description="Deploys the WAR copying it to the deploy directory">
		<copy file="${target.dir}/${war.name}" todir="${jboss.deploy.dir}"/>
	</target>
	
	<target name="jboss-undeploy" depends="war"
		description="Removes the WAR from the deploy directory">
		<delete file="${jboss.deploy.dir}/${war.name}"/>
	</target>
	
	<!--
	<target name="tomcat-install" depends="compile"
	description="Install application to the Tomcat servlet container">
	
	<deploy url="${tomcat.manager.url}" username="${tomcat.manager.username}"
	password="${tomcat.manager.password}" path="${ant.project.hame}"
	localWar="file://${web.dir}"/>
	</target>
	-->
	
	<!--
	<target name="tomcat-list"
	description="List installed applications on the Tomcat servlet container">
	
	<list url="${tomcat.manager.url}" username="${tomcat.manager.username}"
	password="${tomcat.manager.password}"/>
	</target>
	-->
	
	<target name="validate-message" unless="validate.xml">
		<echo>Skipping validation - variable "validate.xml" is not set.</echo>
		<echo>Your Ant version is ${ant.version}.</echo>
		<echo>To validate you need Ant version 1.7.</echo>
	</target>
	
	<target name="validate" if="validate.xml">
		<schemavalidate file="webapp/WEB-INF/web.xml">
			<schema namespace="http://java.sun.com/xml/ns/j2ee"
				file="${schema.dir}/web-app_2_4.xsd"/>
			<schema namespace="http://www.w3.org/XML/1998/namespace"
				file="${schema.dir}/xml.xsd"/>
		</schemavalidate>
		<schemavalidate file="webapp/WEB-INF/portalTest-servlet.xml">
			<schema namespace="http://www.springframework.org/schema/beans"
				file="${schema.dir}/spring-beans.xsd"/>
			<schema namespace="http://www.springframework.org/schema/aop"
				file="${schema.dir}/spring-aop.xsd"/>
		</schemavalidate>
	</target>
	
</project>